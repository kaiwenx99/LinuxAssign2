#!/bin/bash
# Specify the interpreting shell for this script

# Check if the script is run as root by comparing root user ID 0 with envionment user ID
# Ref: man bash, /EUID section
if [[ $EUID -ne 0 ]]; then
  echo "Error: Please run this script with root privilege."
  exit 1
# Error handle: Return a non-zero exit code when error happened, user doesn't have privilege to run it
fi

# Show user the syntax for customization if user didn't 
# Example: sudo ./call_script -i
user_guide() {
  echo "Syntax: sudo $0 [-i] [-l]"
  echo "-i: Install packages"
  echo "-l: Create symbolic links for configuration files"
  exit 1
  # Return a non-zero exit code, indicate error happened, user didn't pass in option
}

# Initiate variables to identify user option, default false indicating it's not speciffied
install_packages=false
create_links=false

while getopts "il" opt; do
# 'il': possible options, no need to pass in arguments
  case $opt in
    i)
    # When user pass in '-i' option, change install_packages to True
      install_packages=true
      ;;
    l)
    # When user pass in '-l' option, change install_opt to True
      create_links=true
      ;;
    *)
    # When other arguments occur, dislay the user_guide function again showing the syntax
      user_guide
      ;;
  esac
done

# Run the install_pacs script if -i option is pass in
# When install_packages is not empty, means user specified to install packages, proceed
if $install_packages; then
  echo "Start package installation..."
  if ./install_pacs; then
# If this script is executed successfully, proceed
    echo "Package installation done."
  else
  # If exit code is not 0, error occured.
    echo "Error: Package installation failed."
  fi
fi

# Run the create_symlinks script if -l option is set
# When create_links is not empty, means user specified to install packages, proceed
if $create_links; then
  echo "Starting symbolic link creation..."
  if ./create_symlinks; then
# If this script is executed successfully, proceed
    echo "Symbolic link creation completed successfully."
  else
  # If exit code is not 0, error occured.
    echo "Error: Symbolic link creation failed."
  fi
fi

# If neither option is given by user, show user_guide to display syntax
if ! $install_packages && ! $create_links; then
  user_guide
fi
